# Since .env is gitignored, you can use .env.example to build a new `.env` file when you clone the repo.
# Keep this file up-to-date when you add new variables to \`.env\`.

# **RECOMMENDED ALTERNATIVE**: Using `direnv` for environment management
# You can also use `direnv` to manage environment variables securely:
# - macOS: with Keychain integration for secure credential storage
# - Linux: with pass, gpg, or other credential managers
# - Windows: with Windows Credential Manager or WSL with Linux tools
#
# If you prefer this approach, modify and use the .envrc file instead of creating a .env file.
# Example .envrc configurations for each OS are available in tooling/direnv.
# Please create a symbolic link to the workspace root and use it:
# $ ln -s tooling/direnv/.envrc .envrc
# See .envrc for setup instructions and secure credential storage options for your OS.

# // .env.example ----------------------
# This file will be committed to version control, so make sure not to have any secrets in it.
# If you are cloning this repo, create a copy of this file named `.env` and populate it with your secrets.

#
# DATABASE CONFIGURATION
# Choose ONE of the following database connection options:
#
# * Option 1: Local PostgreSQL with Docker (recommended for development)
# Uncomment the lines below and comment out the external PostgreSQL URL
# Start the database with: pnpm docker:up
#
# * Option 2: External PostgreSQL (Supabase or other hosted service)
# Use the POSTGRES_URL below and comment out the Docker configuration
#

# * OPTION 1: Local PostgreSQL (Docker) - Currently active
# - These are used to setup to local PostgreSQL database with Docker.
APP_NAME=turbo-template
DB_HOST=localhost
DB_PORT=5432
DB_NAME=turbo-template
DB_USER=postgres
DB_PASSWORD=your-password-here
# - This URL is used by your framework(e.g., Drizzle) to connect to your database.
# - Drizzle uses POSTGRES_URL, but Prisma uses DATABASE_URL.
# - Adjust the variable names based on your framework choice.
POSTGRES_URL="postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"
# - These are used to setup to local pgAdmin with Docker.
PGADMIN_PORT=5050
PGADMIN_DEFAULT_EMAIL="your-email@example.com"
PGADMIN_DEFAULT_PASSWORD="${DB_PASSWORD}"

# * OPTION 2: External PostgreSQL (Supabase) - Uncomment to use
# - This URL is used by your framework(e.g., Prisma or Drizzle) to connect to your database.
# POSTGRES_URL="postgres://postgres.[USERNAME]:[PASSWORD]@aws-0-eu-central-1.pooler.supabase.com:6543/postgres"

# For production with Supabase:
# DATABASE_URL="postgres://postgres.[USERNAME]:[PASSWORD]@aws-0-eu-central-1.pooler.supabase.com:6543/postgres?workaround=supabase-pooler.vercel"
# POSTGRES_URL="postgres://postgres.[USERNAME]:[PASSWORD]@aws-0-eu-central-1.pooler.supabase.com:6543/postgres?workaround=supabase-pooler.vercel"
